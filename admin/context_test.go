package admin

import (
	"fmt"
	"testing"

	"github.com/jinzhu/gorm"
	"github.com/qor/qor"

	_ "github.com/mattn/go-sqlite3"
)

// Template helpers test

func TestLinkTo(t *testing.T) {
	context := &Context{}

	link := context.LinkTo("test link", "/link")

	if link != "<a href=\"/link\">test link</a>" {
		t.Error("link not generated by LinkTo")
	}
}

func TestUrlForAdmin(t *testing.T) {
	admin := New(&qor.Config{})
	admin.router = &Router{Prefix: "/admin"}
	context := &Context{}
	context.Admin = admin

	rootLink := context.UrlFor(admin)

	if rootLink != "/admin" {
		t.Error("Admin link not generated by UrlFor")
	}
}

func TestUrlForResource(t *testing.T) {
	admin := New(&qor.Config{})
	admin.router = &Router{Prefix: "/admin"}
	user := admin.AddResource(&User{})

	context := &Context{}
	context.Admin = admin

	userLink := context.UrlFor(user)

	if userLink != "/admin/user" {
		t.Error("resource link not generated by UrlFor")
	}
}

func TestUrlForResourceName(t *testing.T) {
	testdb, _ := gorm.Open("sqlite3", "/tmp/qor_admin_test.db")
	if err := testdb.DropTableIfExists(&User{}).Error; err != nil {
		panic(err)
	}
	if err := testdb.AutoMigrate(&User{}).Error; err != nil {
		panic(err)
	}

	admin := New(&qor.Config{})
	admin.AddResource(&User{})
	user := &User{Name: "test"}
	testdb.Create(&user)

	admin.router = &Router{Prefix: "/admin"}

	context := &Context{Context: &qor.Context{}}
	context.Admin = admin
	context.SetDB(&testdb)

	userLink := context.UrlFor(user)

	if userLink != "/admin/user/"+fmt.Sprintf("%v", user.Id) {
		t.Error("resource link not generated by UrlFor")
	}
}
